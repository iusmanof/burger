/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100\%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}a:link{text-decoration:none;color:#fff}body{height:100%;font-family:Montserrat,sans-serif}.header{position:fixed;z-index:10}.header,.header:before{width:100%;top:0;left:0}.header:before{content:"";position:absolute;height:100%;background-color:rgba(108,60,197,.99);z-index:2}.header__logo{flex-basis:60px;overflow:hidden;z-index:3}.header__logo-eye{max-width:100%;display:block}.header__body{justify-content:space-between;height:80px;align-items:center}.header__body,.header__list{display:flex;position:relative}.header__list{z-index:2}.header__list-item{margin-left:20px}.header__link{color:#fff;font-weight:400;font-size:1.1rem;text-transform:uppercase;paddinb-bottom:5px}.header__link:hover{border-bottom:1px solid #fff}.header__burger{display:none}.container{max-width:1180px;margin:0 auto;padding:0 10px}.content{padding-top:100px}.content__block{padding:5px;margin-bottom:20px}.content__title{font-size:1.5rem;font-weight:400}.content__text{padding-top:20px;font-size:1rem;font-weight:300;line-height:28px;text-align:justify}@media(max-width:767px){body.lock{overflow:hidden}.header__body{height:50px}.header__logo{flex-basis:40px}.header__burger{display:block;width:30px;height:20px;position:relative;z-index:3;cursor:pointer}.header__burger:after,.header__burger:before{content:"";background-color:#fff;position:absolute;width:100%;height:2px;left:0;transition:all .5s ease 0s}.header__burger:after{top:0}.header__burger:before{bottom:0}.header__burger-line{background-color:#fff;position:absolute;width:100%;height:2px;left:0;top:9px;transition:all .5s ease 0s}.header__burger.active span{transform:scale(0)}.header__burger.active:before{transform:rotate(45deg);top:9px}.header__burger.active:after{transform:rotate(-45deg);top:9px}.header__menu{position:fixed;top:-110%;left:0;width:100%;height:100%;padding:70px 10px;overflow:auto;background-color:#18b5a4}.header .active{top:0;transition:all .5s ease .2s}.header__list{display:block}.header__list-item{margin:0 0 20px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/